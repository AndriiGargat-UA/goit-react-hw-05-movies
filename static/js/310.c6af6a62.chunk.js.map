{"version":3,"file":"static/js/310.c6af6a62.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  font-size: 23px;\n  margin-bottom: 8px;\n  text-decoration: none;\n  color: #020c2e;\n  &:hover {\n    color: #fa1919;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  margin: 0 8px 8px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMovieSearch } from 'services/api';\nimport { MoviesContainer, MovieLink, SearchInput } from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('start');\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const movieName = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    setStatus('pending');\n    const fetchMovie = async () => {\n      try {\n        const response = await fetchMovieSearch(movieName);\n        setStatus('resolved');\n        setMovies(response);\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n    fetchMovie();\n  }, [movieName]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (form.elements.query.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  if (status === 'pending') {\n    return <h2>Loading...</h2>;\n  }\n\n  if (status === 'rejected') {\n    return <h2>Sorry, something went wrong: {error}</h2>;\n  }\n\n  if (status === 'resolved') {\n    return (\n      <MoviesContainer>\n        <form onSubmit={handleSubmit}>\n          <SearchInput type=\"text\" name=\"query\" />\n          <button type=\"submit\">Search</button>\n        </form>\n\n        <ul>\n          {movies.map(movie => {\n            const { id, title } = movie;\n            return (\n              <li key={id}>\n                <MovieLink to={`${id}`} state={{ from: location }}>\n                  {title}\n                </MovieLink>\n              </li>\n            );\n          })}\n        </ul>\n      </MoviesContainer>\n    );\n  }\n\n  return (\n    <MoviesContainer>\n      {' '}\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n    </MoviesContainer>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '7eaebca790602b6b3aca45d915bff38d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data.results;\n};\n\nfetchMovieDetails.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieCredits.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieReviews.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieSearch.PropTypes = {\n  query: PropTypes.string,\n};\n"],"names":["MoviesContainer","styled","MovieLink","Link","SearchInput","useState","movies","setMovies","status","setStatus","error","setError","useSearchParams","searchParams","setSearchParams","movieName","get","location","useLocation","useEffect","fetchMovie","fetchMovieSearch","response","message","handleSubmit","event","preventDefault","form","currentTarget","elements","query","value","reset","onSubmit","type","name","map","movie","id","title","to","state","from","API_KEY","BASE_URL","fetchTrendingMovies","axios","data","results","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","PropTypes"],"sourceRoot":""}