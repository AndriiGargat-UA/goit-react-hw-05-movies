{"version":3,"file":"static/js/33.a28eb66c.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\n  padding: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const BackLink = styled(Link)`\n  text-decoration: none;\n  &:hover {\n    color: #fa1919;\n  }\n`;\n\nexport const MovieContainer = styled.div`\n  display: flex;\n  border-bottom: 1px solid #020c2e;\n\n  p,\n  li {\n    font-size: 20px;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  margin: 10px 20px 10px 0;\n  width: 350px;\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 35px;\n  color: #010d38;\n  margin-bottom: 10px;\n`;\n\nexport const DetailsTitle = styled.h3`\n  font-size: 23px;\n  margin-bottom: 8px;\n`;\n\nexport const DetailsLink = styled(Link)`\n  font-size: 23px;\n  margin-bottom: 8px;\n  text-decoration: none;\n  color: #020c2e;\n  &:hover {\n    color: #fa1919;\n  }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/api';\nimport poster from 'images/poster-not-found.png';\nimport {\n  MovieDetailsContainer,\n  BackLink,\n  MoviePoster,\n  MovieTitle,\n  MovieContainer,\n  DetailsTitle,\n  DetailsLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('start');\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  const { movieId } = useParams();\n  const POSTER_PATH = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    setStatus('pending');\n    const getMovieDetails = async () => {\n      try {\n        const response = await fetchMovieDetails(movieId);\n        setMovie(response);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (status === 'pending') {\n    return <h2>Loading...</h2>;\n  }\n  if (status === 'rejected') {\n    return <h2>Sorry, something went wrong: {error}</h2>;\n  }\n  if (status === 'resolved') {\n    const { title, release_date, vote_average, overview, genres, poster_path } =\n      movie;\n\n    return (\n      <MovieDetailsContainer>\n        <BackLink to={backLinkLocationRef.current}>Go back</BackLink>\n\n        <MovieContainer>\n          {poster_path ? (\n            <MoviePoster\n              src={`${POSTER_PATH}${poster_path}`}\n              alt=\"movie poster\"\n            />\n          ) : (\n            <MoviePoster src={poster} alt=\"movie poster\" />\n          )}\n\n          <div>\n            <MovieTitle>\n              {title} ({release_date.slice(0, 4)})\n            </MovieTitle>\n            <p>User Score: {Math.round(vote_average * 10)} %</p>\n            <DetailsTitle>Overview</DetailsTitle>\n            <p>{overview}</p>\n            <DetailsTitle>Genres</DetailsTitle>\n            <ul>\n              {genres.map(genre => {\n                return <li key={genre.id}>{genre.name}</li>;\n              })}\n            </ul>\n          </div>\n        </MovieContainer>\n\n        <DetailsTitle>Additional information</DetailsTitle>\n        <ul>\n          <li>\n            <DetailsLink to=\"cast\">Cast</DetailsLink>\n          </li>\n          <li>\n            <DetailsLink to=\"reviews\">Reviews</DetailsLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </MovieDetailsContainer>\n    );\n  }\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst API_KEY = '7eaebca790602b6b3aca45d915bff38d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieSearch = async query => {\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return response.data.results;\n};\n\nfetchMovieDetails.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieCredits.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieReviews.PropTypes = {\n  movieId: PropTypes.string,\n};\nfetchMovieSearch.PropTypes = {\n  query: PropTypes.string,\n};\n"],"names":["MovieDetailsContainer","styled","BackLink","Link","MovieContainer","MoviePoster","MovieTitle","DetailsTitle","DetailsLink","useState","movie","setMovie","status","setStatus","error","setError","location","useLocation","backLinkLocationRef","useRef","state","from","movieId","useParams","useEffect","getMovieDetails","fetchMovieDetails","response","message","title","release_date","vote_average","overview","genres","poster_path","to","current","src","alt","poster","slice","Math","round","map","genre","name","id","Suspense","fallback","API_KEY","BASE_URL","fetchTrendingMovies","axios","data","results","fetchMovieCredits","cast","fetchMovieReviews","fetchMovieSearch","query","PropTypes"],"sourceRoot":""}